<?php


namespace Tests\Feature\Services;

use App\Classes\TwitterApiMock;
use App\Models\SocialAccount;
use App\Services\Social\TwitterService;
use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Carbon\Carbon;

class TwitterServiceTest extends TestCase
{

    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_update_user_data()
    {
        $socialAccount = SocialAccount::create(['provider_name' => 'twitter', 'provider_id' => '1437634956319248387']);

        $service = new TwitterService($socialAccount);
        $service->setApi(new TwitterApiMock);
        $service->updateUserData();

        $this->assertDatabaseCount('social_accounts', 1);
        $this->assertDatabaseHas('social_accounts', [
            'full_name' => 'Afdal Analytics',
            'email' => 'test@test.com',
            'avatar' => 'http://pbs.twimg.com/profile_images/1485560930087931905/P81ON4oo_normal.jpg'
        ]);

        // SOCIAL ACCOUNT DATA
        $this->assertDatabaseCount('social_account_data', 1);
        $this->assertDatabaseHas('social_account_data', [
            'social_account_id' => $socialAccount->id,
            'followers' => 2,
            'total_tweets' => 13,
            'date' => Carbon::now()->format('Y-m-d')
        ]);

        // TWEETS
        $this->assertDatabaseCount('tweets', 3);
        $this->assertDatabaseHas('tweets', [
            'tweet_id' => "1510497440029421574",
            'text' => "Hello",
            'created' => "2022-03-27",
            'social_account_id' => $socialAccount->id,
        ]);


        // TWEETS DATA
        $this->assertDatabaseCount('tweet_data', 3);
        $this->assertDatabaseHas('tweet_data', [
            'tweet_id' => 1,
            'reply_count' => 4,
            'impression_count' => 70,
            'user_profile_clicks' => 1,
            'like_count' => 2,
            'retweet_count' => 5,
            'quote_count' => 9,
            'date' => Carbon::now()->format('Y-m-d')
        ]);
    }

    public function test_doubled_of_update_user_data()
    {
        $socialAccount = SocialAccount::create(['provider_name' => 'twitter', 'provider_id' => '1437634956319248387']);

        $service = new TwitterService($socialAccount);
        $service->setApi(new TwitterApiMock);
        $service->updateUserData();

        // repeat data update
        $socialAccount->last_imported_at = null;
        $socialAccount->save();

        $service = new TwitterService($socialAccount);
        $service->setApi(new TwitterApiMock());
        $service->updateUserData();

        $this->assertDatabaseCount('social_accounts', 1);
        $this->assertDatabaseCount('social_account_data', 1);
        $this->assertDatabaseCount('tweets', 3);
        $this->assertDatabaseCount('tweet_data', 3);
    }
}
